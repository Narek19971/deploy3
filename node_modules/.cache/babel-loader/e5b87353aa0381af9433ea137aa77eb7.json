{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/home/narek/Desktop/deploy_2-master/react-ui/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"/home/narek/Desktop/deploy_2-master/react-ui/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/home/narek/Desktop/deploy_2-master/react-ui/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar hsluv_1 = require(\"hsluv\");\n\nvar base_1 = require(\"./configs/base\");\n\nfunction colorFactory(theme, scheme) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : base_1.config;\n  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.entries(theme).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        role = _ref2[0],\n        hex = _ref2[1];\n\n    if (typeof hex !== 'string') {\n      return null;\n    }\n\n    var base = hsluv_1.hexToHsluv(hex);\n    var variants = config[role] || [];\n    return Object.assign({}, variants.reduce(function (accumulator, _a) {\n      var name = _a.name,\n          settings = tslib_1.__rest(_a, [\"name\"]);\n\n      var _settings$scheme = settings[scheme],\n          _settings$scheme$hue = _settings$scheme.hue,\n          hue = _settings$scheme$hue === void 0 ? base[0] : _settings$scheme$hue,\n          _settings$scheme$satu = _settings$scheme.saturation,\n          saturation = _settings$scheme$satu === void 0 ? base[1] : _settings$scheme$satu,\n          _settings$scheme$ligh = _settings$scheme.lightness,\n          lightness = _settings$scheme$ligh === void 0 ? base[2] : _settings$scheme$ligh,\n          _settings$scheme$alph = _settings$scheme.alpha,\n          alpha = _settings$scheme$alph === void 0 ? 1 : _settings$scheme$alph;\n\n      var resolve = function resolve(value, baseToResolve) {\n        return typeof value === 'number' ? value : value(baseToResolve);\n      };\n\n      var _hsluv_1$hsluvToRgb$m = hsluv_1.hsluvToRgb([resolve(hue, base[0]), resolve(saturation, base[1]), resolve(lightness, base[2])]).map(function (channel) {\n        return Math.round(channel * 255);\n      }),\n          _hsluv_1$hsluvToRgb$m2 = _slicedToArray(_hsluv_1$hsluvToRgb$m, 3),\n          red = _hsluv_1$hsluvToRgb$m2[0],\n          green = _hsluv_1$hsluvToRgb$m2[1],\n          blue = _hsluv_1$hsluvToRgb$m2[2];\n\n      return Object.assign(Object.assign({}, accumulator), _defineProperty({}, name, \"rgba(\".concat(red, \", \").concat(green, \", \").concat(blue, \", \").concat(alpha, \")\")));\n    }, {}));\n  }))));\n}\n\nexports.colorFactory = colorFactory;","map":null,"metadata":{},"sourceType":"script"}