{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar actions_1 = require(\"../../actions\");\n\nvar type_validate_1 = require(\"../type-validate\");\n\nvar utils_1 = require(\"../utils\");\n\nvar link_1 = require(\"./link\");\n\nvar linkOptionsValidator = type_validate_1.matchesObject({\n  id: type_validate_1.matchesString(),\n  options: link_1.linkPropsSchema\n});\n\nfunction activeLinkError(value) {\n  return [{\n    error: 'invalid_active_item',\n    value: value,\n    message: 'expected active item to exist in menu items'\n  }];\n}\n\nfunction getOptionsSchema(options) {\n  var baseSchema = type_validate_1.matchesObject({\n    items: type_validate_1.makeOptional(type_validate_1.matchesArray(linkOptionsValidator)),\n    active: type_validate_1.makeOptional(linkOptionsValidator)\n  });\n  var items = options.items,\n      active = options.active;\n\n  if (items && active) {\n    var activeItemSchema = type_validate_1.matchesObject({\n      active: type_validate_1.composeSchemas(linkOptionsValidator, function (value) {\n        return items.find(function (item) {\n          return item.id === value.id;\n        }) ? undefined : activeLinkError(value);\n      })\n    });\n    return type_validate_1.composeSchemas(baseSchema, activeItemSchema);\n  }\n\n  return baseSchema;\n}\n\nfunction getPayloadSchema(payload) {\n  var baseSchema = type_validate_1.matchesObject({\n    items: type_validate_1.makeOptional(type_validate_1.matchesArray(link_1.linkActionSchema)),\n    active: type_validate_1.makeOptional(type_validate_1.matchesString())\n  });\n  var items = payload.items,\n      active = payload.active;\n\n  if (items && active) {\n    var activeItemSchema = type_validate_1.matchesObject({\n      active: type_validate_1.composeSchemas(type_validate_1.matchesString(), function (value) {\n        return items.find(function (item) {\n          return item.id === value;\n        }) ? undefined : activeLinkError(value);\n      })\n    });\n    return type_validate_1.composeSchemas(baseSchema, activeItemSchema);\n  }\n\n  return baseSchema;\n}\n\nfunction validateProps(props) {\n  var result = type_validate_1.validate(props, getOptionsSchema(props));\n  return result;\n}\n\nexports.validateProps = validateProps;\n\nfunction validateAction(action) {\n  var actionType = actions_1.NavigationMenu.ActionType;\n\n  if (action.type === actions_1.ChannelMenu.ActionType.LINK_UPDATE || action.type === actions_1.ChannelMenu.ActionType.UPDATE) {\n    actionType = actions_1.ChannelMenu.ActionType;\n  }\n\n  return type_validate_1.validate(action, utils_1.createActionValidator(actionType, getPayloadSchema(action.payload), true, false));\n}\n\nexports.validateAction = validateAction;","map":null,"metadata":{},"sourceType":"script"}