{"ast":null,"code":"var _jsxFileName = \"/home/narek/Desktop/deploy_2-master/react-ui/src/component/Settings/Settings.jsx\";\nimport React from \"react\";\nimport { Page, Banner, Card, Frame, TextContainer, Heading, FormLayout, ChoiceList, TextField, Select, Button, VisuallyHidden } from \"@shopify/polaris\";\nexport default function Settings() {\n  var actualPageMarkup = React.createElement(Page, {\n    fullWidth: true,\n    title: \"Settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Card.Section, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Banner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Use your finance report to get detailed information about your business. \", React.createElement(\"a\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Let us know what you think\"))), React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Quiet Hours\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Let's be responsible and not message your customers between certain times of the day (e.g 6pm to 8am). There must be a minimum of 7 hours between the start and end time. Also note that we take into account the recipients timezone for quiet hours.\"), React.createElement(FormLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(FormLayout.Group, {\n    condensed: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Start\",\n    clearButton: true,\n    value: \"15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"End\",\n    clearButton: true,\n    value: \"15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(VisuallyHidden, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"End\",\n    clearButton: true,\n    value: \"15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(VisuallyHidden, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"End\",\n    clearButton: true,\n    value: \"15\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })))))), React.createElement(Card.Section, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Auto Top-up\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Make sure your account is always topped up so that you don't miss out on potential conversion opportunities. This is optional and you can disable this if you prefer to manually top up.\"), React.createElement(FormLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(FormLayout.Group, {\n    condensed: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(FormLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ChoiceList, {\n    allowMultiple: true,\n    choices: [{\n      label: \"Enabled\",\n      value: \"shipping\"\n    }],\n    selected: \"\",\n    onChange: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"It is RECOMMENDED to enable the Auto Topup setting. You could potentially lose on potential sales should your account not have enough funds.\")), React.createElement(FormLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    prefix: \"$\",\n    type: \"number\",\n    label: \"Add $10 to my account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    prefix: \"$\",\n    type: \"number\",\n    label: \"When my balance falls below $5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    prefix: \"$\",\n    type: \"number\",\n    label: \"But don't go over my monthly limit of $100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))))), React.createElement(Card.Section, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Global Sender ID\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"In supported countries, you can choose for your texts to be delivered from a short custom sender, such as your store name (not available in US/CA). Otherwise, we will automatically select a phone number to send texts from.\"), React.createElement(FormLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(FormLayout.Group, {\n    condensed: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(VisuallyHidden, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))))), React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Smart Sending\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Smart sending allows you to set some boundaries about how frequently you text your customers marketing messages. This ensures that a customer won't receive multiple marketing texts within the specified time period.\"), React.createElement(FormLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(FormLayout.Group, {\n    condensed: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Select, {\n    label: \"Time Period\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(VisuallyHidden, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Select, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Button, {\n    primary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Confirm Updates\")))))), React.createElement(\"div\", {\n    style: {\n      paddingBottom: \"100px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"Polaris-Frame__Main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Frame, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, actualPageMarkup));\n}","map":{"version":3,"sources":["/home/narek/Desktop/deploy_2-master/react-ui/src/component/Settings/Settings.jsx"],"names":["React","Page","Banner","Card","Frame","TextContainer","Heading","FormLayout","ChoiceList","TextField","Select","Button","VisuallyHidden","Settings","actualPageMarkup","label","value","textAlign","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Page,\n  Banner,\n  Card,\n  Frame,\n  TextContainer,\n  Heading,\n  FormLayout,\n  ChoiceList,\n  TextField,\n  Select,\n  Button,\n  VisuallyHidden,\n} from \"@shopify/polaris\";\n\nexport default function Settings() {\n  const actualPageMarkup = (\n    <Page fullWidth title=\"Settings\">\n      <Card>\n        <Card.Section>\n          <Banner>\n            <p>\n              Use your finance report to get detailed information about your\n              business. <a href=\"#\">Let us know what you think</a>\n            </p>\n          </Banner>\n          <TextContainer>\n            <Heading>Quiet Hours</Heading>\n            <p>\n              Let's be responsible and not message your customers between\n              certain times of the day (e.g 6pm to 8am). There must be a minimum\n              of 7 hours between the start and end time. Also note that we take\n              into account the recipients timezone for quiet hours.\n            </p>\n            <FormLayout>\n              <FormLayout.Group condensed>\n                <TextField label=\"Start\" clearButton value=\"15\"></TextField>\n                <TextField label=\"End\" clearButton value=\"15\"></TextField>\n                <VisuallyHidden>\n                  <TextField label=\"End\" clearButton value=\"15\"></TextField>\n                </VisuallyHidden>\n                <VisuallyHidden>\n                  <TextField label=\"End\" clearButton value=\"15\"></TextField>\n                </VisuallyHidden>\n              </FormLayout.Group>\n            </FormLayout>\n          </TextContainer>\n        </Card.Section>\n        <Card.Section>\n          <TextContainer>\n            <Heading>Auto Top-up</Heading>\n            <p>\n              Make sure your account is always topped up so that you don't miss\n              out on potential conversion opportunities. This is optional and\n              you can disable this if you prefer to manually top up.\n            </p>\n            <FormLayout>\n              <FormLayout.Group condensed>\n                <FormLayout>\n                  <ChoiceList\n                    allowMultiple\n                    choices={[\n                      {\n                        label: \"Enabled\",\n                        value: \"shipping\",\n                      },\n                    ]}\n                    selected=\"\"\n                    onChange=\"\"\n                  />\n                  <p>\n                    It is RECOMMENDED to enable the Auto Topup setting. You\n                    could potentially lose on potential sales should your\n                    account not have enough funds.\n                  </p>\n                </FormLayout>\n                <FormLayout>\n                  <TextField\n                    prefix=\"$\"\n                    type=\"number\"\n                    label=\"Add $10 to my account\"\n                  ></TextField>\n                  <TextField\n                    prefix=\"$\"\n                    type=\"number\"\n                    label=\"When my balance falls below $5\"\n                  ></TextField>\n                  <TextField\n                    prefix=\"$\"\n                    type=\"number\"\n                    label=\"But don't go over my monthly limit of $100\"\n                  ></TextField>\n                </FormLayout>\n              </FormLayout.Group>\n            </FormLayout>\n          </TextContainer>\n        </Card.Section>\n        <Card.Section>\n          <TextContainer>\n            <Heading>Global Sender ID</Heading>\n            <p>\n              In supported countries, you can choose for your texts to be\n              delivered from a short custom sender, such as your store name (not\n              available in US/CA). Otherwise, we will automatically select a\n              phone number to send texts from.\n            </p>\n            <FormLayout>\n              <FormLayout.Group condensed>\n                <TextField></TextField>\n                <VisuallyHidden>\n                  <TextField></TextField>\n                </VisuallyHidden>\n              </FormLayout.Group>\n            </FormLayout>\n          </TextContainer>\n          <TextContainer>\n            <Heading>Smart Sending</Heading>\n            <p>\n              Smart sending allows you to set some boundaries about how\n              frequently you text your customers marketing messages. This\n              ensures that a customer won't receive multiple marketing texts\n              within the specified time period.\n            </p>\n            <FormLayout>\n              <FormLayout.Group condensed>\n                <Select label=\"Time Period\"></Select>\n                <VisuallyHidden>\n                  <Select></Select>\n                </VisuallyHidden>\n              </FormLayout.Group>\n              <div style={{ textAlign: \"center\" }}>\n                <Button primary>Confirm Updates</Button>\n              </div>\n            </FormLayout>\n          </TextContainer>\n        </Card.Section>\n      </Card>\n      <div style={{ paddingBottom: \"100px\" }}></div>\n    </Page>\n  );\n  return (\n    <div className=\"Polaris-Frame__Main\">\n      <Frame>{actualPageMarkup}</Frame>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}